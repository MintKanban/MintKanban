{"version":3,"sources":["components/NavBar/NavBar.tsx","components/landingpage.tsx","components/Types/CardData.ts","components/EditCard/EditCard.tsx","components/Card/Card.tsx","components/AddCard/AddCard.tsx","components/DeleteListConfirmation/DeleteListConfirmation.tsx","components/ListDropdown/ListDropdown.tsx","components/EditListTitle/EditListTitle.tsx","components/List/List.tsx","components/AddList/AddList.tsx","components/Tour/TourComponent.tsx","components/File/Load.tsx","components/File/Save.tsx","components/Board/board.tsx","App.tsx","index.tsx"],"names":["LandingPageNav","Navbar","bg","variant","expand","Container","Brand","as","Link","to","Toggle","aria-controls","Collapse","className","id","Nav","Item","Button","BoardNav","props","children","LandingPage","Row","Col","type","src","alt","xs","CardGroup","Card","Img","Body","Title","Text","Footer","href","CardData","title","description","this","EditCard","card","editCard","deleteCard","handleClose","show","useState","setTitle","setDescription","Modal","onHide","Header","closeButton","Form","Group","controlId","Label","Control","placeholder","value","onChange","e","target","required","rows","onClick","preventDefault","stopPropagation","idx","list","listName","setList","setShow","handleShow","draggableId","index","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","isDragging","AddCard","addCard","added","setAdded","onSubmit","InputGroup","Append","DeleteListConfirmation","deleteList","backdrop","keyboard","ListDropdown","showConfirmation","setShowConfirmation","DropdownButton","Dropdown","EditListTitle","listOrder","renameList","duplicate","setDuplicate","newListName","setNewListName","editing","setEditing","listOrderCopy","concat","map","toLowerCase","useEffect","includes","saveTitle","listNameInput","document","getElementById","focus","defaultValue","onFocus","select","onBlur","onDoubleClick","List","key","border","droppableId","AddList","lists","setLists","setListOrder","addButton","setAddButton","setListName","updateListName","addList","autoFocus","TourComponent","onRequestClose","steps","selector","content","isOpen","maskClassName","rounded","accentColor","onAfterOpen","disableBodyScroll","onBeforeClose","enableBodyScroll","Load","loadList","useDropzone","multiple","accept","acceptedFiles","getRootProps","getInputProps","cloneElement","text","then","serializedList","console","error","name","Save","dataString","JSON","stringify","data","dataURI","encodeURIComponent","a","createElement","download","body","appendChild","click","removeChild","Board","todo","inProgress","done","Object","keys","parse","listCopy","splice","listsCopy","indexOf","savedList","localStorage","getItem","setItem","alignRight","onDragEnd","result","destination","source","startIndex","endIndex","Array","from","removed","reorder","droppableSource","droppableDestination","sourceClone","destClone","move","direction","App","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6c5f4a61.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { Button, Container, Nav, Navbar } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\n\n\nexport const LandingPageNav: FC = () => {\n  return <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\n    <Container>\n      <Navbar.Brand as={Link} to='/'>tmrw</Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse className=\"justify-content-end\" id=\"basic-navbar-nav\">\n        <Nav.Item>\n          <Button as={Link} variant=\"secondary\" to=\"/board\">\n            Go to your board\n          </Button>\n        </Nav.Item>\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n}\n\nexport const BoardNav: FC = props => {\n  return <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\">\n    <Navbar.Brand as={Link} to='/'>tmrw</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse className=\"justify-content-end\" id=\"basic-navbar-nav\">\n      { props.children }\n    </Navbar.Collapse>\n  </Navbar>\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, CardGroup, Col, Container, Row } from 'react-bootstrap'\nimport { LandingPageNav } from \"./NavBar/NavBar\";\n\n\nexport default function LandingPage(){\n\n  \n\n  return (\n    <>\n      <LandingPageNav />\n      <Container className=\"landing-page-main\">\n        <Row>\n          <Col className=\"first-div-master\">\n            <div className=\"first-div\">\n              <div className=\"card-body\">\n                <h3 className=\"card-title\">Plan for your tmrw.</h3>\n                <p className=\"card-text\">\n                  From creating goals, no matter how big or small, tmrw is here\n                  to help you out today\n                </p>\n                <Link to=\"/board\">\n                  <button\n                    className=\"btn btn-secondary my-2 my-sm-0\"\n                    type=\"submit\"\n                  >\n                    Go to your board\n                  </button>\n                </Link>\n              </div>\n            </div>\n          </Col>\n          <Col>\n            <img\n              className=\"woman-planning\"\n              src=\"https://www.coderworldlabs.com/images/Web-Development.png\"\n              alt=\"woman-planning\"\n            />\n          </Col>\n        </Row>\n        <div className = \"growth-section\">\n        <Row className=\"mt-5\">\n          <Col>\n            <div className=\"second-div\">\n              <div className=\"card-body\">\n                <h2 className=\"card-title\">Get order in your life</h2>\n                <p className=\"card-text\">\n                  What do you need to get done? What are your goals? For the\n                  day? For the week? or For the year? Now you can set all those\n                  ideas in your head in one place.\n                </p>\n              </div>\n            </div>\n          </Col>\n          <Col xs={5}>\n            <img\n              className=\"plan-for-growth\"\n              src=\"https://www.startelelogic.com/assets/images/custom/custom-software-development.png\"\n              alt=\"growth\"\n            />\n          </Col>\n        </Row>\n\n        <Row className=\"mt-5\">\n          <Col xs={4}>\n            <img\n              className=\"plan-for-growth\"\n              src=\"https://www.nicepng.com/png/full/29-296364_custom-software-development-in-islamabad-pakistan-system-administration.png\"\n              alt=\"growth\"\n            />\n          </Col>\n          <Col>\n            <div className=\"second-div\">\n              <div className=\"card-body\">\n                <h2 className=\"card-title\">Plan for growth</h2>\n                <p className=\"card-text\">\n                  Track your progress. When you start a goal, see how far you've\n                  come! When you complete a goal, move it along your tasks or\n                  remove it. Studies show, when you see progress, you stick to\n                  your plan.\n                </p>\n              </div>\n            </div>\n          </Col>\n        </Row>\n\n        <Row className=\"mt-5\">\n          <Col>\n            <div className=\"second-div\">\n              <div className=\"card-body\">\n                <h2 className=\"card-title\">Find time for a brighter tmrw</h2>\n                <p className=\"card-text\">\n                  When you accomplish your goals, you will find more time in\n                  your life to do the things you love. Spend time with your\n                  family, try out a new hobbie, travel. The time you invested in\n                  planning creates a happier and brighter tmrw for yourself!\n                </p>\n\n                <p>Start creating your board today!</p>\n                <Link to=\"/board\">\n                  <button\n                    className=\"btn btn-secondary my-2 my-sm-0\"\n                    type=\"submit\"\n                  >\n                    Start your board\n                  </button>\n                </Link>\n              </div>\n            </div>\n          </Col>\n          <Col xs={5}>\n            <img\n              className=\"plan-for-growth\"\n              src=\"https://live.staticflickr.com/65535/50286276283_a6b48e448e_k.jpg\"\n              alt=\"growth\"\n            />\n          </Col>\n        </Row>\n        </div>\n\n        <div className=\"landing-page-divider\">\n          <Row className=\"mt-5\">\n            <Col>\n              <h2 className=\"card-title\">This is how it works!</h2>\n              <p className=\"card-text\">\n                Drag and Drop you list in what ever order suits you.\n              </p>\n            </Col>\n            <Col>\n              <img src=\"https://s8.gifyu.com/images/tmrw_drags.gif\" alt=\"\" />\n            </Col>\n          </Row>\n\n        <Row className=\"mt-5\">\n          <Col>\n            <img src=\"https://s8.gifyu.com/images/tmrw_tasks.gif\" alt=\"\" />\n          </Col>\n          <Col>\n            <h2 className=\"card-title\">Create, Edit, and Delete</h2>\n            <p className=\"card-text\">\n              You can create any task, move it around, edit its title and desctiption, \n              and delete it whenever you wish!\n            </p>\n          </Col>\n        </Row>\n        </div>\n\n        <Row className=\"mt-5\">\n          <h2 className=\"card-title\">Meet the Engineers</h2>\n          <CardGroup>\n            <Card>\n              <Card.Img\n                variant=\"top\"\n                src=\"https://rrc-app.herokuapp.com/leo.jpeg\"\n              />\n              <Card.Body>\n                <Card.Title>Leo YulinLi</Card.Title>\n                <Card.Text>\n                  Leo is a software engineer experienced in React, Ruby on\n                  Rails, and Java/Kotlin development. Utilizing his extensive\n                  programming knowledge, he played an integral part in building\n                  the back end and utilizing async requests in parallel to\n                  improve load times. He is passionate about solving problems\n                  that positively impact every day life.\n                </Card.Text>\n              </Card.Body>\n              <Card.Footer>\n                <div className=\"social-links\">\n                  <a href=\"https://github.com/LeoYulinLi\">\n                    <img\n                      src=\"https://rrc-app.herokuapp.com/githubIcon.svg\"\n                      alt=\"github\"\n                      className=\"social-emblem\"\n                    />\n                  </a>\n                  <a href=\"https://www.linkedin.com/in/leoyulinli/\">\n                    <img\n                      src=\"https://rrc-app.herokuapp.com/linkedInIcon.svg\"\n                      alt=\"linkedin\"\n                      className=\"social-emblem\"\n                    />\n                  </a>\n                </div>\n              </Card.Footer>\n            </Card>\n            <Card>\n              <Card.Img\n                variant=\"top\"\n                src=\"https://honeybear.herokuapp.com/static/media/bryan_sillorequez.a8f603ca.jpg\"\n              />\n              <Card.Body>\n                <Card.Title>Bryan Sillorequez</Card.Title>\n                <Card.Text>\n                  Bryan Sillorequez is a software engineer with an eye for\n                  design. Before software engineering, he was a photographer,\n                  which allows him to apply his technical design background to\n                  create eye-catching apps with great functionality. He has\n                  experience in React/Redux, Ruby, JavaScript and CSS. When he\n                  is not coding, you can find him thousands of feet up a rock\n                  face.\n                </Card.Text>\n              </Card.Body>\n              <Card.Footer>\n                <div className=\"social-links\">\n                  <a href=\"https://github.com/bvsillorequez\">\n                    <img\n                      src=\"https://rrc-app.herokuapp.com/githubIcon.svg\"\n                      alt=\"github\"\n                      className=\"social-emblem\"\n                    />\n                  </a>\n                  <a href=\"http://www.linkedin.com/in/bsillo\">\n                    <img\n                      src=\"https://rrc-app.herokuapp.com/linkedInIcon.svg\"\n                      alt=\"linkedin\"\n                      className=\"social-emblem\"\n                    />\n                  </a>\n                </div>\n              </Card.Footer>\n            </Card>\n            <Card>\n              <Card.Img\n                variant=\"top\"\n                src=\"https://rrc-app.herokuapp.com/ryan.png\"\n              />\n              <Card.Body>\n                <Card.Title>Ryan Tran</Card.Title>\n                <Card.Text>\n                  Ryan is a full stack engineer and graduate of UCSD. Holding a\n                  B.S. in Electrical Engineering, he is experienced in\n                  Javascript, React, Ruby on Rails, Typescript and Python. He\n                  enjoys working on challenging problems, and often finds\n                  himself learning new technologies to best complete the tasks\n                  on hand.\n                </Card.Text>\n              </Card.Body>\n              <Card.Footer>\n                <div className=\"social-links\">\n                  <a href=\"https://github.com/rd-tran\">\n                    <img\n                      src=\"https://rrc-app.herokuapp.com/githubIcon.svg\"\n                      alt=\"github\"\n                      className=\"social-emblem\"\n                    />\n                  </a>\n                  <a href=\"https://www.linkedin.com/in/rdtran/\">\n                    <img\n                      src=\"https://rrc-app.herokuapp.com/linkedInIcon.svg\"\n                      alt=\"linkedin\"\n                      className=\"social-emblem\"\n                    />\n                  </a>\n                </div>\n              </Card.Footer>\n            </Card>\n          </CardGroup>\n        </Row>\n      </Container>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\"></nav>\n    </>\n  );\n}\n","export default class CardData {\n  title: string = \"(TODO)\"\n  description?: string\n  constructor(title: string, description?: string) {\n    this.title = title;\n    this.description = description;\n  }\n}","import React, { useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport CardData from '../Types/CardData';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\ninterface EditCardProps {\n  card: CardData\n  editCard: (card: CardData) => void\n  deleteCard: () => void\n  handleClose: () => void\n  show: boolean\n}\n\nexport default function EditCard(\n  { card, editCard, deleteCard, handleClose, show }: EditCardProps) {\n\n  const [title, setTitle] = useState(card.title);\n  const [description, setDescription] = useState(card.description)\n\n  const save = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    editCard(new CardData(title, description));\n    handleClose();\n  }\n  \n  const remove = () => {\n    deleteCard();\n    handleClose();\n  }\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Edit</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Group controlId=\"title\">\n            <Form.Label>Title</Form.Label>\n            <Form.Control type=\"text\"\n                          placeholder={'Insert a task'}\n                          value={title}\n                          onChange={e => setTitle(e.target.value)}\n                          required\n            />\n          </Form.Group>\n          <Form.Group controlId=\"description\">\n            <Form.Label>Description</Form.Label>\n            <Form.Control as=\"textarea\" rows={3}\n                          value={description}\n                          onChange={e => setDescription(e.target.value)}>\n            </Form.Control>\n          </Form.Group>\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"primary\" onClick={save}>Save Changes</Button>\n        <Button variant=\"danger\" onClick={remove}>Delete</Button>\n        <Button variant=\"secondary\" onClick={handleClose}>Cancel</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useState } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\nimport CardData from '../Types/CardData';\nimport EditCard from '../EditCard/EditCard';\nimport BCard from 'react-bootstrap/Card';\n\ninterface CardProps {\n  id: string,\n  card: CardData,\n  idx: number,\n  list: CardData[],\n  listName: string,\n  setList: {\n    addCard: (card: CardData) => void;\n    editCard: (index: number, list: CardData[]) => (card: CardData) => void;\n    deleteCard: (index: number, list: CardData[]) => () => void;\n    deleteList: () => void;\n    renameList: (newListName: string) => void;\n  }\n}\n\nexport default function Card(\n  { id, card, idx, list, listName, setList }: CardProps) {\n\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  return (\n    <>\n      <EditCard\n        card={ card }\n        editCard={ setList.editCard(idx, list) }\n        deleteCard={ setList.deleteCard(idx, list) }\n        handleClose={ handleClose }\n        show={ show }\n      />\n      <Draggable\n        draggableId={`${listName}-${idx}`}\n        index={idx}\n      >\n        {(provided, snapshot) => (\n            <BCard\n              id={id}\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              onClick={handleShow}\n              className=\"mb-3\"\n              bg={snapshot.isDragging ? \"light\" : \"\"}\n            >\n              <BCard.Body>\n                <BCard.Text>\n                  {card.title}\n                </BCard.Text>\n              </BCard.Body>\n            </BCard>\n        )}\n      </Draggable>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport CardData from '../Types/CardData';\nimport InputGroup from 'react-bootstrap/InputGroup';\n\ninterface AddCardProps {\n  id: string,\n  addCard: (card: CardData) => void\n}\n\nexport default function AddCard({ id, addCard }: AddCardProps) {\n  const [added, setAdded] = useState(false);\n\n  const [title, setTitle] = useState(\"\");\n\n  const submitCard = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    addCard(new CardData(title));\n    setAdded(true);\n    setTitle('');\n  };\n  \n  return (\n    <>\n      <div>\n        <Form id={id} onSubmit={submitCard}>\n          <InputGroup>\n            <Form.Control type=\"text\"\n                          placeholder={\n                            added ? 'Add another card' : 'Add a card'\n                          }\n                          value={title}\n                          onChange={ e =>  setTitle(e.target.value) }\n                          required\n            />\n            <InputGroup.Append>\n              <Button type=\"submit\">Add</Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Form>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport Modal from 'react-bootstrap/esm/Modal';\nimport Button from 'react-bootstrap/esm/Button';\n\ninterface DeleteListConfirmationProps {\n  show: boolean,\n  listName: string,\n  deleteList: () => void,\n  handleClose: () => void\n}\n\nexport default function DeleteListConfirmation(\n  { show, listName, deleteList, handleClose }: DeleteListConfirmationProps) {\n\n  return (\n    <Modal\n      show={show}\n      onHide={handleClose}\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Modal.Header closeButton>\n          <Modal.Title>Are you sure you want to delete this list?</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <div>\n            Press delete to delete your {`${listName}`} list and all cards belonging to it.\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"primary\" onClick={deleteList}>\n            Delete\n          </Button>\n        </Modal.Footer>\n    </Modal>\n  );\n}","import React, { useState } from 'react';\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport DeleteListConfirmation from '../DeleteListConfirmation/DeleteListConfirmation';\nimport Dropdown from 'react-bootstrap/esm/Dropdown';\n\ninterface ListDropdownProps {\n  id: string,\n  listName: string,\n  deleteList: () => void\n}\n\nexport default function ListDropdown(\n  { id, listName, deleteList }: ListDropdownProps) {\n  \n  const [showConfirmation, setShowConfirmation] = useState(false);\n  \n  return (\n    <div id={id}>\n      <DropdownButton id=\"dropdown-item-button\"\n        title={<div className=\"three-dot-menu\"></div>}\n        >\n        <Dropdown.Item as=\"button\"\n          onClick={() => setShowConfirmation(true)}\n          >\n          Delete\n        </Dropdown.Item>\n\n        <DeleteListConfirmation\n          show={showConfirmation}\n          listName={listName}\n          deleteList={deleteList}\n          handleClose={() => setShowConfirmation(false)}\n          />\n      </DropdownButton>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\n\ninterface EditListTitleProps {\n  listName: string,\n  listOrder: string[],\n  renameList: (newListName: string) => void,\n  duplicate: boolean,\n  setDuplicate: (arg0: boolean) => void\n}\n\nexport default function EditListTitle(\n  { listName, listOrder, renameList, duplicate, setDuplicate }: EditListTitleProps\n) {\n\n  const [newListName, setNewListName] = useState(listName)\n  const [editing, setEditing] = useState(false);\n  \n  const listOrderCopy = listOrder.concat().map( title => title.toLowerCase());\n  useEffect(() => {\n    if (listName.toLowerCase() === newListName.toLowerCase()) {\n      setDuplicate(false);\n    } else {\n      setDuplicate(listOrderCopy.includes(newListName.toLowerCase()));\n    }\n  }, [listName, newListName, listOrderCopy, setDuplicate]);\n\n  const saveTitle = (e: any) => {\n    e.preventDefault();\n    if (!newListName || duplicate) return null;\n    setEditing(false);\n    renameList(newListName);\n  };\n\n  useEffect(() => {\n    if (editing) {\n      const listNameInput = document.getElementById(`${listName}-input`);\n      listNameInput?.focus();\n    }\n  }, [editing, listName])\n\n  if (editing) {\n    return (\n      <Form onSubmit={saveTitle}>\n        <Form.Control\n          type=\"text\"\n          id={`${listName}-input`}\n          required\n          defaultValue={listName}\n          onChange={ e => setNewListName(e.target.value) }\n          onFocus={ (e: React.FocusEvent<HTMLInputElement>) => \n            e.target.select()\n          }\n          onBlur={saveTitle}\n        />\n      </Form>\n    );\n  } else {\n    return (\n      <h5 onDoubleClick={() => setEditing(true)}>\n        {listName}\n      </h5>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport Card from \"../Card/Card\";\nimport CardData from \"../Types/CardData\";\nimport AddCard from \"../AddCard/AddCard\";\nimport ListDropdown from \"../ListDropdown/ListDropdown\";\nimport EditListTitle from \"../EditListTitle/EditListTitle\";\nimport './list.scss'\nimport BCard from 'react-bootstrap/Card';\n\ninterface ListProps {\n  index: number,\n  list: CardData[],\n  listName: string,\n  setList: {\n    addCard: (card: CardData) => void;\n    editCard: (index: number, list: CardData[]) => (card: CardData) => void;\n    deleteCard: (index: number, list: CardData[]) => () => void;\n    deleteList: () => void;\n    renameList: (newListName: string) => void;\n  },\n  listOrder: string[]\n}\n\nexport default function List(\n  { index, list, listName, setList, listOrder }: ListProps) {\n\n  const [duplicate, setDuplicate] = useState(false);\n  \n  return (\n    <div id={index === 0 ? 'first-step' : ''}>\n      <Draggable\n        key={`${listName}`}\n        draggableId={`${listName}`}\n        index={index}\n      >\n        {(provided) => (\n          <BCard\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className=\"list-card mr-3 mb-3\"\n          >\n            <BCard.Header>\n              <div id={index === 0 ? 'second-step' : ''}\n                className=\"d-flex flex-row justify-content-between align-items-baseline\"\n              >\n                <EditListTitle\n                  listName={listName}\n                  listOrder={listOrder}\n                  duplicate={duplicate}\n                  setDuplicate={setDuplicate}\n                  renameList={setList.renameList}\n                />\n                <ListDropdown\n                  id={index === 0 ? 'third-step' : ''}\n                  listName={listName}\n                  deleteList={setList.deleteList}\n                  />\n              </div>\n              <BCard\n                border={duplicate ? 'danger' : '0'}\n                className={duplicate ? 'mt-2' : 'm-0'}\n              >\n                <BCard.Text>\n                  <span className=\"d-flex flex-row justify-content-center align-items-baseline\">\n                    { duplicate ? 'That list already exists' : ''}\n                  </span>\n                </BCard.Text>\n              </BCard>\n            </BCard.Header>\n            <div id={index === 0 ? 'fourth-step' : ''}>\n              <Droppable droppableId={`${listName}`} type=\"CARD\">\n                {(provided) => (\n                  <BCard.Body ref={provided.innerRef}>\n                    {\n                      list.map((card, idx) => (\n                        <Card\n                          id={index === 0 && idx === 0 ? 'fifth-step' :''}\n                          key={idx}\n                          card={card}\n                          idx={idx}\n                          list={list}\n                          listName={listName}\n                          setList={setList}\n                        />\n                      ))\n                    }\n                    {provided.placeholder}\n                    <AddCard\n                      id={index === 0 ? 'sixth-step' : ''}\n                      addCard={setList.addCard}\n                    />\n                  </BCard.Body>\n                )}\n              </Droppable>\n            </div>\n          </BCard>\n        )}\n      </Draggable>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport CardData from '../Types/CardData';\nimport BCard from 'react-bootstrap/Card';\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\n\ninterface AddListProps {\n  lists: Record<string, CardData[]>,\n  setLists: React.Dispatch<React.SetStateAction<Record<string, CardData[]>>>\n  listOrder: string[]\n  setListOrder: React.Dispatch<React.SetStateAction<string[]>>\n}\n\nexport default function AddList(\n  { lists, setLists, listOrder, setListOrder }: AddListProps) {\n\n  const [addButton, setAddButton] = useState(false);\n  const [listName, setListName] = useState('');\n  const updateListName = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setListName(e.target.value);\n  };\n  const [duplicate, setDuplicate] = useState(false);\n  const listOrderCopy = listOrder.concat().map( title => title.toLowerCase());\n  useEffect(() => {\n    setDuplicate(listOrderCopy.includes(listName.toLowerCase()));\n  }, [listName, listOrderCopy]);\n  const addList = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (duplicate) return null;\n    setLists({ ...lists, [listName]: [] });\n    setListOrder(listOrder.concat([listName]));\n    setAddButton(false);\n    setListName('');\n  };\n\n  function cardBody() {\n    if (addButton) {\n      return <>\n          <BCard.Header>\n            <Form onSubmit={ addList }>\n              <InputGroup>\n                <Form.Control type=\"text\"\n                              value={ listName }\n                              onChange={ updateListName }\n                              required\n                              autoFocus\n                />\n                <InputGroup.Append>\n                  <Button type=\"submit\">Create</Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Form>\n          </BCard.Header>\n          <BCard.Body>\n            <div>\n              { duplicate ? 'That list already exists' : '' }\n            </div>\n          </BCard.Body>\n        </>\n    } else {\n      return (\n        <BCard.Body id=\"seventh-step\"\n          className=\"d-flex align-items-center justify-content-center\"\n          onClick={ () => setAddButton(true) }\n        >\n          <Button variant=\"link\">Add a new list</Button>\n        </BCard.Body>\n      );\n    }\n  }\n\n  return <BCard className=\"list-card\">\n    { cardBody() }\n  </BCard>\n}\n","import React, { useState } from 'react';\nimport Tour from 'reactour';\nimport { disableBodyScroll, enableBodyScroll } from \"body-scroll-lock\";\n\nexport default function TourComponent() {\n\n  const [show, setShow] = useState(false);\n  const accentColor = \"#5cb7b7\";\n  \n  const disableBody = (target: HTMLElement) => (\n    disableBodyScroll(target)\n  );\n  const enableBody = (target: HTMLElement) => (\n    enableBodyScroll(target)\n  );\n  \n  const steps = [\n    {\n      selector: '#first-step',\n      content: \"To get started, here's a list.\"\n    },\n    {\n      selector: '#second-step',\n      content: \"At the top is the title. Double click on it to edit.\"\n    },\n    {\n      selector: '#third-step',\n      content: 'If you want to delete a lest, you can do so here.'\n    },\n    {\n      selector: '#fourth-step',\n      content: 'Below the title, are a list of all the tasks.'\n    },\n    {\n      selector: '#fifth-step',\n      content: 'Click on one to edit its details.'\n    },\n    {\n      selector: '#sixth-step',\n      content: \"At the bottom of the list, you'll find the option to add more tasks\"\n    },\n    {\n      selector: '#seventh-step',\n      content: \"And on the right of the page, you'll find the option to add new lists.\"\n    },\n    {\n      selector: '#eigth-step',\n      content: 'Lastly, you can quickly reorder lists, and tasks by dragging and dropping them with your cursor. You can reorder task cards within the same list, move them over to another list, and even reorder the lists themselves!'\n    }\n  ];\n\n  return (\n    <>\n      <button onClick={ () => setShow(true) }>Take a tour!</button>\n      <Tour\n        onRequestClose={ () => setShow(false) }\n        steps={steps}\n        isOpen={show}\n        maskClassName=\"mask\"\n        className=\"helper\"\n        rounded={5}\n        accentColor={accentColor}\n        onAfterOpen={disableBody}\n        onBeforeClose={enableBody}\n      />\n    </>\n  );\n}","import React, { cloneElement, FC, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport BCard from \"react-bootstrap/Card\";\nimport Modal from 'react-bootstrap/Modal';\nimport { Button, Form } from \"react-bootstrap\";\n\ninterface LoadProps {\n  loadList: (serializedList: string) => void\n}\n\nconst Load: FC<LoadProps> = ({ loadList, children }) => {\n\n  const { acceptedFiles, getRootProps, getInputProps } = useDropzone({\n    multiple: false,\n    accept: [\"application/json\"]\n  });\n\n  const [show, setShow] = useState(false);\n\n  function onSubmit() {\n    acceptedFiles[0]?.text().then(serializedList => {\n      loadList(serializedList);\n      setShow(false);\n    }, e => {\n      console.error(e);\n    })\n  }\n\n  return <>\n    { cloneElement(children as any, { onClick: () => setShow(true) }) }\n    <Modal show={ show } onHide={ () => setShow(false) }>\n      <Form onSubmit={onSubmit}>\n        <Modal.Header closeButton>\n          <Modal.Title>Load from File</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <BCard className=\"justify-content-center align-items-center mb-2\" { ...getRootProps() }>\n            <BCard.Body>\n              <input { ...getInputProps() } />\n              <span>Drag 'n' drop some files here, or click to select files</span>\n            </BCard.Body>\n          </BCard>\n          { acceptedFiles[0] && <p>File: { acceptedFiles[0].name }</p>}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button type=\"submit\">Load</Button>\n        </Modal.Footer>\n      </Form>\n    </Modal>\n  </>\n}\n\nexport default Load;\n","import CardData from \"../Types/CardData\";\nimport React, { cloneElement, FC } from \"react\";\n\ninterface SaveProps {\n  data: {\n    lists: Record<string, CardData[]>\n    listOrder: string[]\n  }\n}\n\nconst Save: FC<SaveProps> = props => {\n\n  const stupidClick = () => {\n    const dataString = JSON.stringify(props.data);\n    const dataURI = `data:application/json;charset=utf-8,${encodeURIComponent(dataString)}`;\n    const defaultFileName = \"tmrw.json\";\n    const a = document.createElement(\"a\");\n    a.href = dataURI;\n    a.download = defaultFileName;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n\n  return <>\n    { cloneElement(props.children as any, { onClick: stupidClick }) }\n    </>\n}\n\nexport default Save;\n","import React, { useEffect, useState } from 'react';\nimport '../../styles/index.scss';\nimport { DragDropContext, DraggableLocation, Droppable, DropResult } from 'react-beautiful-dnd';\nimport List from '../List/List';\nimport AddList from '../AddList/AddList';\nimport CardData from '../Types/CardData';\nimport TourComponent from '../Tour/TourComponent';\nimport { Dropdown, DropdownButton } from \"react-bootstrap\";\nimport { BoardNav } from \"../NavBar/NavBar\";\nimport Load from \"../File/Load\";\nimport Save from \"../File/Save\";\n\nfunction Board() {\n  const [lists, setLists] = useState<Record<string, CardData[]>>({\n    todo: [new CardData(\"first\"), new CardData(\"second\")],\n    inProgress: [new CardData(\"finish hackathon\")],\n    done: [new CardData(\":P\")]\n  });\n  const [listOrder, setListOrder] = useState(Object.keys(lists));\n\n  function loadList(serializedList: string) {\n    const { lists, listOrder } = JSON.parse(serializedList);\n    setLists(lists);\n    setListOrder(listOrder);\n  }\n\n  useEffect(() => {\n    const savedList = localStorage.getItem(\"tmrw-kanban\");\n    if (savedList) {\n      loadList(savedList);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"tmrw-kanban\", JSON.stringify({ lists, listOrder }));\n  }, [lists, listOrder]);\n\n  function setList(listName: string) {\n    return {\n      addCard: (card: CardData) => {\n        setLists({\n          ...lists,\n          [listName]: [...lists[listName], card]\n        });\n      },\n      editCard: (index: number, list: CardData[]) => (card: CardData) => {\n        const listCopy = [...list];\n        listCopy.splice(index, 1, card);\n        setLists({\n          ...lists,\n          [listName]: listCopy\n        });\n      },\n      deleteCard: (index: number, list: CardData[]) => () => {\n        const listCopy = [...list];\n        listCopy.splice(index, 1);\n        setLists({\n          ...lists,\n          [listName]: listCopy\n        });\n      },\n      deleteList: () => {\n        const listsCopy = { ...lists };\n        delete listsCopy[listName];\n        setLists(listsCopy);\n\n        const listOrderCopy = [...listOrder];\n        listOrderCopy.splice(listOrder.indexOf(listName), 1)\n        setListOrder(listOrderCopy);\n      },\n      renameList: (newListName: string) => {\n        const listsCopy = { ...lists };\n        delete listsCopy[listName];\n        listsCopy[newListName] = lists[listName];\n        setLists(listsCopy);\n\n        const listOrderCopy = [...listOrder];\n        listOrderCopy.splice(listOrder.indexOf(listName), 1, newListName);\n        setListOrder(listOrderCopy);\n      }\n    }\n  }\n\n  const move = (\n    source: CardData[], destination: CardData[],\n    droppableSource: DraggableLocation,\n    droppableDestination: DraggableLocation\n  ) => {\n    const sourceClone = Array.from(source);\n    const destClone = Array.from(destination);\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\n\n    destClone.splice(droppableDestination.index, 0, removed);\n\n    const result = { ...lists };\n    result[droppableSource.droppableId] = sourceClone;\n    result[droppableDestination.droppableId] = destClone;\n\n    setLists(result)\n  };\n\n  const reorder = (\n    type: string, droppableId: string, startIndex: number, endIndex: number\n  ) => {\n    if (type === 'LIST') {\n      const result = Array.from(listOrder);\n      const [removed] = result.splice(startIndex, 1);\n      result.splice(endIndex, 0, removed);\n\n      setListOrder(result)\n    } else if (type === 'CARD') {\n      const result = Array.from(lists[droppableId]);\n      const [removed] = result.splice(startIndex, 1);\n      result.splice(endIndex, 0, removed);\n\n      setLists({\n        ...lists,\n        [droppableId]: result\n      })\n    }\n  };\n\n  const onDragEnd = (result: DropResult) => {\n    if (!result.destination) {\n      return;\n    }\n\n    const { type, source, destination } = result;\n\n    if (source.droppableId === destination.droppableId) {\n      reorder(\n        type,\n        source.droppableId,\n        source.index,\n        destination.index\n      );\n    } else {\n      move(\n        lists[source.droppableId],\n        lists[destination.droppableId],\n        source,\n        destination\n      );\n    }\n  }\n\n  return (\n    <>\n      <BoardNav>\n        <DropdownButton id=\"dropdown-menu-button\" title=\"Menu\" variant=\"secondary\" alignRight>\n          <Load loadList={loadList}>\n            <Dropdown.Item>\n              Load\n            </Dropdown.Item>\n          </Load>\n          <Save data={{lists, listOrder}}>\n            <Dropdown.Item>\n              Save\n            </Dropdown.Item>\n          </Save>\n        </DropdownButton>\n      </BoardNav>\n      <div>\n        <DragDropContext\n          onDragEnd={onDragEnd}\n        >\n          <Droppable\n            droppableId=\"main-droppable\"\n            direction=\"horizontal\"\n            type=\"LIST\"\n          >\n            {(provided) => (\n              <main id=\"eigth-step\"\n                ref={provided.innerRef}\n                className=\"d-flex align-items-start flex-row overflow-auto p-3 mt-3\">\n                {\n                  listOrder.map((listName, idx) => {\n                    return (\n                      <List key={listName}\n                        index={idx}\n                        list={lists[listName]}\n                        listName={listName}\n                        setList={setList(listName)}\n                        listOrder={listOrder}\n                      />\n                    );\n                  })\n                }\n                {provided.placeholder}\n                <AddList\n                  lists={lists}\n                  setLists={setLists}\n                  listOrder={listOrder}\n                  setListOrder={setListOrder}\n                />\n              </main>\n            )}\n          </Droppable>\n        </DragDropContext>\n\n        <TourComponent/>\n      </div>\n    </>\n  );\n}\n\nexport default Board;\n","import React from 'react';\nimport './styles/index.scss';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport LandingPage from './components/landingpage';\nimport Board from './components/Board/board'\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route exact path=\"/board\" component={Board} />\n          <Route path=\"/\" component={LandingPage} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}